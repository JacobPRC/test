{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\jacob\\\\test\\\\tester\\\\src\\\\components\\\\CreateSquare.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { CREATE_SQUARE, EDIT_SQUARE } from \"../queries/mutations\";\nexport default _s(() => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [goal, setGoal] = useState(0);\n  const [description, setDescription] = useState(\"\");\n  const [createSquare] = useMutation(CREATE_SQUARE);\n  const [editSquare] = useMutation(EDIT_SQUARE);\n  let history = useHistory();\n  let params = useParams();\n  let location = useLocation();\n  useEffect(() => {\n    if (location.state) {\n      const {\n        name,\n        description,\n        goal\n      } = location.state;\n      setName(name);\n      setGoal(goal);\n      setDescription(description);\n    }\n  }, []);\n\n  const submitSquare = () => {\n    createSquare({\n      variables: {\n        name,\n        goal,\n        description,\n        userId: params.id\n      }\n    });\n    history.goBack();\n  };\n\n  const submitSquareEdit = () => {\n    editSquare({\n      variables: {\n        name,\n        goal,\n        description,\n        id: location.state.id\n      }\n    });\n  };\n\n  const locationCheck = () => location.state ? submitSquareEdit() : submitSquare();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui centered card\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ui form segment\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Let's make a square!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"two fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: name,\n            onChange: e => setName(e.target.value),\n            placeholder: \"What's it called?\",\n            name: \"name\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Goal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"How much you wanna save?\",\n            name: \"goal\",\n            type: \"number\",\n            value: goal,\n            onChange: e => setGoal(e.target.valueAsNumber)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Tell us what that $$ will be used for...\",\n          name: \"description\",\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => locationCheck(),\n        className: \"ui primary submit button\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => history.goBack(),\n        className: \"ui negative submit button\",\n        children: \"Exit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}, \"Bhp62kVr7ELy+YqlK3Fz9/v/fHI=\", false, function () {\n  return [useMutation, useMutation, useHistory, useParams, useLocation];\n});","map":{"version":3,"sources":["C:/Users/jacob/test/tester/src/components/CreateSquare.js"],"names":["React","useState","useEffect","useHistory","useParams","useLocation","useMutation","CREATE_SQUARE","EDIT_SQUARE","name","setName","goal","setGoal","description","setDescription","createSquare","editSquare","history","params","location","state","submitSquare","variables","userId","id","goBack","submitSquareEdit","locationCheck","e","target","value","valueAsNumber"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,WAAhC,QAAmD,kBAAnD;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAEA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,sBAA3C;AAEA,kBAAe,MAAM;AAAA;;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACc,YAAD,IAAiBT,WAAW,CAACC,aAAD,CAAlC;AACA,QAAM,CAACS,UAAD,IAAeV,WAAW,CAACE,WAAD,CAAhC;AACA,MAAIS,OAAO,GAAGd,UAAU,EAAxB;AACA,MAAIe,MAAM,GAAGd,SAAS,EAAtB;AACA,MAAIe,QAAQ,GAAGd,WAAW,EAA1B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiB,QAAQ,CAACC,KAAb,EAAoB;AAClB,YAAM;AAAEX,QAAAA,IAAF;AAAQI,QAAAA,WAAR;AAAqBF,QAAAA;AAArB,UAA8BQ,QAAQ,CAACC,KAA7C;AACAV,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,MAAAA,cAAc,CAACD,WAAD,CAAd;AACD;AACF,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMQ,YAAY,GAAG,MAAM;AACzBN,IAAAA,YAAY,CAAC;AAAEO,MAAAA,SAAS,EAAE;AAAEb,QAAAA,IAAF;AAAQE,QAAAA,IAAR;AAAcE,QAAAA,WAAd;AAA2BU,QAAAA,MAAM,EAAEL,MAAM,CAACM;AAA1C;AAAb,KAAD,CAAZ;AACAP,IAAAA,OAAO,CAACQ,MAAR;AACD,GAHD;;AAKA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BV,IAAAA,UAAU,CAAC;AACTM,MAAAA,SAAS,EAAE;AAAEb,QAAAA,IAAF;AAAQE,QAAAA,IAAR;AAAcE,QAAAA,WAAd;AAA2BW,QAAAA,EAAE,EAAEL,QAAQ,CAACC,KAAT,CAAeI;AAA9C;AADF,KAAD,CAAV;AAGD,GAJD;;AAMA,QAAMG,aAAa,GAAG,MACpBR,QAAQ,CAACC,KAAT,GAAiBM,gBAAgB,EAAjC,GAAsCL,YAAY,EADpD;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,2BACE;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,KAAK,EAAEZ,IADT;AAEE,YAAA,QAAQ,EAAGmB,CAAD,IAAOlB,OAAO,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV,CAF1B;AAGE,YAAA,WAAW,EAAC,mBAHd;AAIE,YAAA,IAAI,EAAC,MAJP;AAKE,YAAA,IAAI,EAAC;AALP;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,WAAW,EAAC,0BADd;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,IAAI,EAAC,QAHP;AAIE,YAAA,KAAK,EAAEnB,IAJT;AAKE,YAAA,QAAQ,EAAGiB,CAAD,IAAOhB,OAAO,CAACgB,CAAC,CAACC,MAAF,CAASE,aAAV;AAL1B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAwBE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,WAAW,EAAC,0CADd;AAEE,UAAA,IAAI,EAAC,aAFP;AAGE,UAAA,KAAK,EAAElB,WAHT;AAIE,UAAA,QAAQ,EAAGe,CAAD,IAAOd,cAAc,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV;AAJjC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBF,eAiCE;AACE,QAAA,OAAO,EAAE,MAAMH,aAAa,EAD9B;AAEE,QAAA,SAAS,EAAC,0BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjCF,eAuCE;AACE,QAAA,OAAO,EAAE,MAAMV,OAAO,CAACQ,MAAR,EADjB;AAEE,QAAA,SAAS,EAAC,2BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkDD,CAnFD;AAAA,UAIyBnB,WAJzB,EAKuBA,WALvB,EAMgBH,UANhB,EAOeC,SAPf,EAQiBC,WARjB;AAAA","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\r\nimport { useMutation } from \"@apollo/client\";\r\n\r\nimport { CREATE_SQUARE, EDIT_SQUARE } from \"../queries/mutations\";\r\n\r\nexport default () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [goal, setGoal] = useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [createSquare] = useMutation(CREATE_SQUARE);\r\n  const [editSquare] = useMutation(EDIT_SQUARE);\r\n  let history = useHistory();\r\n  let params = useParams();\r\n  let location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (location.state) {\r\n      const { name, description, goal } = location.state;\r\n      setName(name);\r\n      setGoal(goal);\r\n      setDescription(description);\r\n    }\r\n  }, []);\r\n\r\n  const submitSquare = () => {\r\n    createSquare({ variables: { name, goal, description, userId: params.id } });\r\n    history.goBack();\r\n  };\r\n\r\n  const submitSquareEdit = () => {\r\n    editSquare({\r\n      variables: { name, goal, description, id: location.state.id },\r\n    });\r\n  };\r\n\r\n  const locationCheck = () =>\r\n    location.state ? submitSquareEdit() : submitSquare();\r\n\r\n  return (\r\n    <div className=\"ui centered card\">\r\n      <form className=\"ui form segment\">\r\n        <p>Let's make a square!</p>\r\n        <div className=\"two fields\">\r\n          <div className=\"field\">\r\n            <label>Name</label>\r\n            <input\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              placeholder=\"What's it called?\"\r\n              name=\"name\"\r\n              type=\"text\"\r\n            />\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Goal</label>\r\n            <input\r\n              placeholder=\"How much you wanna save?\"\r\n              name=\"goal\"\r\n              type=\"number\"\r\n              value={goal}\r\n              onChange={(e) => setGoal(e.target.valueAsNumber)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"field\">\r\n          <label>Description</label>\r\n          <textarea\r\n            placeholder=\"Tell us what that $$ will be used for...\"\r\n            name=\"description\"\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n          />\r\n        </div>\r\n        <div\r\n          onClick={() => locationCheck()}\r\n          className=\"ui primary submit button\"\r\n        >\r\n          Submit\r\n        </div>\r\n        <div\r\n          onClick={() => history.goBack()}\r\n          className=\"ui negative submit button\"\r\n        >\r\n          Exit\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}