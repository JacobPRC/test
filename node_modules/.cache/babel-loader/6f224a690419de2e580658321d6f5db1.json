{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\jacob\\\\test\\\\tester\\\\src\\\\components\\\\Deposit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\nimport { ADD_MONEY_TO_USERS_ACC, ADD_MONEY_TO_SQUARE } from \"../queries/mutations\";\nexport default _s(() => {\n  _s();\n\n  const [amount, setAmount] = useState(0);\n  const [addMoney] = useMutation(ADD_MONEY_TO_USERS_ACC);\n  const [addMoneyToSquare] = useMutation(ADD_MONEY_TO_SQUARE);\n  let history = useHistory();\n  let params = useParams();\n  let location = useLocation();\n  console.log(location.state);\n  const {\n    id\n  } = params;\n\n  const submitDeposit = e => {\n    e.preventDefault();\n    addMoney({\n      variables: {\n        id,\n        amount\n      }\n    });\n    history.push(`/user/${id}`);\n  };\n\n  const submitSquareDeposit = e => {\n    e.preventDefault();\n    addMoneyToSquare({\n      variables: {\n        id,\n        amount\n      }\n    });\n    history.push(`/user/${id}`);\n  };\n\n  const notEnoughFunds = () => alert(\"You do not have enough funds in you main account.\");\n\n  const depositCheckAndVeryify = e => !location.state ? submitDeposit(e) : location.state.mainBal >= amount ? submitSquareDeposit(e) : notEnoughFunds();\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => depositCheckAndVeryify(e),\n    class: \"ui form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: amount,\n        onChange: e => setAmount(e.target.valueAsNumber),\n        type: \"number\",\n        placeholder: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"ui button\",\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => history.goBack(),\n      className: \"ui button negative\",\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}, \"dVSjLFKhFbgl2as+duAMJVzZ4IU=\", false, function () {\n  return [useMutation, useMutation, useHistory, useParams, useLocation];\n});","map":{"version":3,"sources":["C:/Users/jacob/test/tester/src/components/Deposit.js"],"names":["React","useState","useMutation","useHistory","useParams","useLocation","ADD_MONEY_TO_USERS_ACC","ADD_MONEY_TO_SQUARE","amount","setAmount","addMoney","addMoneyToSquare","history","params","location","console","log","state","id","submitDeposit","e","preventDefault","variables","push","submitSquareDeposit","notEnoughFunds","alert","depositCheckAndVeryify","mainBal","target","valueAsNumber","goBack"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,WAAhC,QAAmD,kBAAnD;AAEA,SACEC,sBADF,EAEEC,mBAFF,QAGO,sBAHP;AAKA,kBAAe,MAAM;AAAA;;AACnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACS,QAAD,IAAaR,WAAW,CAACI,sBAAD,CAA9B;AACA,QAAM,CAACK,gBAAD,IAAqBT,WAAW,CAACK,mBAAD,CAAtC;AACA,MAAIK,OAAO,GAAGT,UAAU,EAAxB;AACA,MAAIU,MAAM,GAAGT,SAAS,EAAtB;AACA,MAAIU,QAAQ,GAAGT,WAAW,EAA1B;AAEAU,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,KAArB;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAASL,MAAf;;AAEA,QAAMM,aAAa,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACAX,IAAAA,QAAQ,CAAC;AAAEY,MAAAA,SAAS,EAAE;AAAEJ,QAAAA,EAAF;AAAMV,QAAAA;AAAN;AAAb,KAAD,CAAR;AACAI,IAAAA,OAAO,CAACW,IAAR,CAAc,SAAQL,EAAG,EAAzB;AACD,GAJD;;AAMA,QAAMM,mBAAmB,GAAIJ,CAAD,IAAO;AACjCA,IAAAA,CAAC,CAACC,cAAF;AACAV,IAAAA,gBAAgB,CAAC;AAAEW,MAAAA,SAAS,EAAE;AAAEJ,QAAAA,EAAF;AAAMV,QAAAA;AAAN;AAAb,KAAD,CAAhB;AACAI,IAAAA,OAAO,CAACW,IAAR,CAAc,SAAQL,EAAG,EAAzB;AACD,GAJD;;AAMA,QAAMO,cAAc,GAAG,MACrBC,KAAK,CAAC,mDAAD,CADP;;AAGA,QAAMC,sBAAsB,GAAIP,CAAD,IAC7B,CAACN,QAAQ,CAACG,KAAV,GACIE,aAAa,CAACC,CAAD,CADjB,GAEIN,QAAQ,CAACG,KAAT,CAAeW,OAAf,IAA0BpB,MAA1B,GACAgB,mBAAmB,CAACJ,CAAD,CADnB,GAEAK,cAAc,EALpB;;AAOA,sBACE;AAAM,IAAA,QAAQ,EAAGL,CAAD,IAAOO,sBAAsB,CAACP,CAAD,CAA7C;AAAkD,IAAA,KAAK,EAAC,SAAxD;AAAA,4BACE;AAAK,MAAA,KAAK,EAAC,OAAX;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,KAAK,EAAEZ,MADT;AAEE,QAAA,QAAQ,EAAGY,CAAD,IAAOX,SAAS,CAACW,CAAC,CAACS,MAAF,CAASC,aAAV,CAF5B;AAGE,QAAA,IAAI,EAAC,QAHP;AAIE,QAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAQ,MAAA,KAAK,EAAC,WAAd;AAA0B,MAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAaE;AAAQ,MAAA,OAAO,EAAE,MAAMlB,OAAO,CAACmB,MAAR,EAAvB;AAAyC,MAAA,SAAS,EAAC,oBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CArDD;AAAA,UAEqB7B,WAFrB,EAG6BA,WAH7B,EAIgBC,UAJhB,EAKeC,SALf,EAMiBC,WANjB;AAAA","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\r\n\r\nimport {\r\n  ADD_MONEY_TO_USERS_ACC,\r\n  ADD_MONEY_TO_SQUARE,\r\n} from \"../queries/mutations\";\r\n\r\nexport default () => {\r\n  const [amount, setAmount] = useState(0);\r\n  const [addMoney] = useMutation(ADD_MONEY_TO_USERS_ACC);\r\n  const [addMoneyToSquare] = useMutation(ADD_MONEY_TO_SQUARE);\r\n  let history = useHistory();\r\n  let params = useParams();\r\n  let location = useLocation();\r\n\r\n  console.log(location.state);\r\n\r\n  const { id } = params;\r\n\r\n  const submitDeposit = (e) => {\r\n    e.preventDefault();\r\n    addMoney({ variables: { id, amount } });\r\n    history.push(`/user/${id}`);\r\n  };\r\n\r\n  const submitSquareDeposit = (e) => {\r\n    e.preventDefault();\r\n    addMoneyToSquare({ variables: { id, amount } });\r\n    history.push(`/user/${id}`);\r\n  };\r\n\r\n  const notEnoughFunds = () =>\r\n    alert(\"You do not have enough funds in you main account.\");\r\n\r\n  const depositCheckAndVeryify = (e) =>\r\n    !location.state\r\n      ? submitDeposit(e)\r\n      : location.state.mainBal >= amount\r\n      ? submitSquareDeposit(e)\r\n      : notEnoughFunds();\r\n\r\n  return (\r\n    <form onSubmit={(e) => depositCheckAndVeryify(e)} class=\"ui form\">\r\n      <div class=\"field\">\r\n        <label>Amount</label>\r\n        <input\r\n          value={amount}\r\n          onChange={(e) => setAmount(e.target.valueAsNumber)}\r\n          type=\"number\"\r\n          placeholder=\"Amount\"\r\n        />\r\n      </div>\r\n      <button class=\"ui button\" type=\"submit\">\r\n        Submit\r\n      </button>\r\n      <button onClick={() => history.goBack()} className=\"ui button negative\">\r\n        Cancel\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}