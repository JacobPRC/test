{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\jacob\\\\test\\\\tester\\\\src\\\\components\\\\CreateSquare.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { CREATE_SQUARE } from \"../queries/mutations\";\nexport default _s(() => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [goal, setGoal] = useState(0);\n  const [description, setDescription] = useState(\"\");\n  const [createSquare] = useMutation(CREATE_SQUARE);\n  let history = useHistory();\n  let params = useParams();\n  let location = useLocation();\n  console.log(location.state);\n\n  const submitSquare = () => {\n    createSquare({\n      variables: {\n        name,\n        goal,\n        description,\n        userId: params.id\n      }\n    });\n    history.goBack();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui centered card\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ui form segment\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Let's make a square!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"two fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: name,\n            onChange: e => setName(e.target.value),\n            placeholder: \"What's it called?\",\n            name: \"name\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Goal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"How much you wanna save?\",\n            name: \"goal\",\n            type: \"number\",\n            value: goal,\n            onChange: e => setGoal(e.target.valueAsNumber)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Tell us what that $$ will be used for...\",\n          name: \"description\",\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => submitSquare(),\n        className: \"ui primary submit button\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => history.goBack(),\n        className: \"ui negative submit button\",\n        children: \"Exit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}, \"Yx4w66cLNA2vk0GcljaBw0Uz3Po=\", false, function () {\n  return [useMutation, useHistory, useParams, useLocation];\n});","map":{"version":3,"sources":["C:/Users/jacob/test/tester/src/components/CreateSquare.js"],"names":["React","useState","useHistory","useParams","useLocation","useMutation","CREATE_SQUARE","name","setName","goal","setGoal","description","setDescription","createSquare","history","params","location","console","log","state","submitSquare","variables","userId","id","goBack","e","target","value","valueAsNumber"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\r\nimport { useMutation } from \"@apollo/client\";\r\n\r\nimport { CREATE_SQUARE } from \"../queries/mutations\";\r\n\r\nexport default () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [goal, setGoal] = useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [createSquare] = useMutation(CREATE_SQUARE);\r\n  let history = useHistory();\r\n  let params = useParams();\r\n  let location = useLocation();\r\n\r\n  console.log(location.state);\r\n\r\n  const submitSquare = () => {\r\n    createSquare({ variables: { name, goal, description, userId: params.id } });\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <div className=\"ui centered card\">\r\n      <form className=\"ui form segment\">\r\n        <p>Let's make a square!</p>\r\n        <div className=\"two fields\">\r\n          <div className=\"field\">\r\n            <label>Name</label>\r\n            <input\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              placeholder=\"What's it called?\"\r\n              name=\"name\"\r\n              type=\"text\"\r\n            />\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Goal</label>\r\n            <input\r\n              placeholder=\"How much you wanna save?\"\r\n              name=\"goal\"\r\n              type=\"number\"\r\n              value={goal}\r\n              onChange={(e) => setGoal(e.target.valueAsNumber)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"field\">\r\n          <label>Description</label>\r\n          <textarea\r\n            placeholder=\"Tell us what that $$ will be used for...\"\r\n            name=\"description\"\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n          />\r\n        </div>\r\n        <div\r\n          onClick={() => submitSquare()}\r\n          className=\"ui primary submit button\"\r\n        >\r\n          Submit\r\n        </div>\r\n        <div\r\n          onClick={() => history.goBack()}\r\n          className=\"ui negative submit button\"\r\n        >\r\n          Exit\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}