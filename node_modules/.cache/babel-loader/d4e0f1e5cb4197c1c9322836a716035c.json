{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\jacob\\\\test\\\\tester\\\\src\\\\components\\\\UserAcc.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { FETCH_USER } from \"../queries/queries\";\nimport Square from \"./Square\";\nexport default _s(() => {\n  _s();\n\n  let params = useParams();\n  const {\n    id\n  } = params;\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useQuery(FETCH_USER, {\n    variables: {\n      id\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 21\n  }, this);\n  const {\n    balance,\n    name,\n    squares\n  } = data.user;\n\n  const renderSquares = () => {\n    if (squares.length < 1) return /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Looks like you don't have any squares. Wanna make one?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this);\n    return squares.map(sq => {\n      const {\n        balance,\n        description,\n        goal,\n        id,\n        name\n      } = sq;\n      return /*#__PURE__*/_jsxDEV(Square, {\n        balance: balance,\n        description: description,\n        goal: goal,\n        id: id,\n        name: name,\n        mainBal: data.user.balance - squareBalance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  useEffect(() => {\n    let squareBalance = 0;\n\n    const getSqBalance = bal => squares.map(sq => {\n      squareBalance += sq.balance;\n      return squareBalance;\n    });\n\n    getSqBalance(squareBalance);\n    return squareBalance;\n  }, []);\n  refetch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [name, \"'s Total Balance: \", balance]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui centered card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: [name, \"'s Main Account Account\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Balance: $\", balance - squareBalance]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: balance === 0 ? \"Would you like to add more money to your account?\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" left floated content\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/user/${id}/deposit`,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"plus icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), \"Add to balance\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"four wide column\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-around\",\n          flexWrap: \"wrap\"\n        },\n        children: renderSquares()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/user/${id}/squares/new`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          bottom: \"2rem\",\n          right: \"2rem\",\n          fontSize: \"3rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"plus icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}, \"Al3LrxODQCF/Oxj814Euri9AG8c=\", false, function () {\n  return [useParams, useQuery];\n});","map":{"version":3,"sources":["C:/Users/jacob/test/tester/src/components/UserAcc.js"],"names":["React","useEffect","useQuery","useParams","Link","FETCH_USER","Square","params","id","loading","error","data","refetch","variables","message","balance","name","squares","user","renderSquares","length","textAlign","map","sq","description","goal","squareBalance","getSqBalance","bal","display","justifyContent","flexWrap","position","bottom","right","fontSize"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\n\r\nimport { FETCH_USER } from \"../queries/queries\";\r\nimport Square from \"./Square\";\r\n\r\nexport default () => {\r\n  let params = useParams();\r\n  const { id } = params;\r\n\r\n  const { loading, error, data, refetch } = useQuery(FETCH_USER, {\r\n    variables: { id },\r\n  });\r\n\r\n  if (loading) return <h1>Loading...</h1>;\r\n  if (error) return <h1>{error.message}</h1>;\r\n\r\n  const { balance, name, squares } = data.user;\r\n\r\n  const renderSquares = () => {\r\n    if (squares.length < 1)\r\n      return (\r\n        <h3 style={{ textAlign: \"center\" }}>\r\n          Looks like you don't have any squares. Wanna make one?\r\n        </h3>\r\n      );\r\n    return squares.map((sq) => {\r\n      const { balance, description, goal, id, name } = sq;\r\n      return (\r\n        <Square\r\n          balance={balance}\r\n          description={description}\r\n          goal={goal}\r\n          id={id}\r\n          name={name}\r\n          mainBal={data.user.balance - squareBalance}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let squareBalance = 0;\r\n\r\n    const getSqBalance = (bal) =>\r\n      squares.map((sq) => {\r\n        squareBalance += sq.balance;\r\n        return squareBalance;\r\n      });\r\n\r\n    getSqBalance(squareBalance);\r\n    return squareBalance;\r\n  }, []);\r\n\r\n  refetch();\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: \"center\" }}>\r\n        {name}'s Total Balance: {balance}\r\n      </h1>\r\n      <div className=\"ui centered card\">\r\n        <div className=\"content\">\r\n          <div className=\"header\">{name}'s Main Account Account</div>\r\n          <div className=\"description\">\r\n            <p>Balance: ${balance - squareBalance}</p>\r\n            <p>\r\n              {balance === 0\r\n                ? \"Would you like to add more money to your account?\"\r\n                : \"\"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\" left floated content\">\r\n          <Link to={`/user/${id}/deposit`}>\r\n            <i className=\"plus icon\" />\r\n            Add to balance\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"four wide column\">\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-around\",\r\n            flexWrap: \"wrap\",\r\n          }}\r\n        >\r\n          {renderSquares()}\r\n        </div>\r\n      </div>\r\n      <Link to={`/user/${id}/squares/new`}>\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            bottom: \"2rem\",\r\n            right: \"2rem\",\r\n            fontSize: \"3rem\",\r\n          }}\r\n        >\r\n          <i className=\"plus icon\"></i>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}